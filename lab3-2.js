/*1. Julia ph√°t hi·ªán ra r·∫±ng ch·ªß c·ªßa hai con ch√≥ ƒê·∫¶U TI√äN v√† HAI con ch√≥ CU·ªêI
C√ôNG th·ª±c s·ª± nu√¥i m√®o ch·ª© kh√¥ng ph·∫£i ch√≥! V√¨ v·∫≠y, h√£y t·∫°o m·ªôt b·∫£n sao n√¥ng
c·ªßa m·∫£ng c·ªßa Julia v√† x√≥a tu·ªïi m√®o kh·ªèi m·∫£ng ƒë√£ sao ch√©p ƒë√≥ */
/*2. T·∫°o m·ªôt m·∫£ng c√≥ c·∫£ d·ªØ li·ªáu c·ªßa Julia (ƒë√£ s·ª≠a) v√† Kate */
/*3. ƒê·ªëi v·ªõi m·ªói con ch√≥ c√≤n l·∫°i, h√£y ƒëƒÉng nh·∫≠p v√†o b·∫£ng ƒëi·ªÅu khi·ªÉn xem ƒë√≥ l√† ch√≥
tr∆∞·ªüng th√†nh hay ch√≥ con */
/*4. Ch·∫°y h√†m cho c·∫£ hai b·ªô d·ªØ li·ªáu th·ª≠ nghi·ªám */
// 1.
const checkDogs = (dogsJulia, dogsKate) => {
    const dogsJuliaCorrected = dogsJulia.slice();
    dogsJuliaCorrected.splice(0, 2);
    dogsJuliaCorrected.splice(-2);
// 2. D√πng spread or concat
    const dogs = [...dogsJuliaCorrected, ...dogsKate];
    console.log(dogs);
// 3.
    dogs.forEach((dog, i) => {
      if (dog >= 3) {
        console.log(`Dog number ${i + 1} is an adult, and is ${dog} years old`);
      } else {
        console.log(`Dog number ${i + 1} is still a puppy üê∂`);
      }
    });
  };
// 4.
  // checkDogs([3, 5, 2, 12, 7], [4, 1, 15, 8, 3]);
  checkDogs([9, 16, 6, 8, 3], [10, 5, 6, 1, 4]);